name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: install python3-pip
      run: sudo apt update && sudo apt -y install python3-pip
    - name: install conan
      run: pip3 install conan
    - name: conan profile
      run: conan profile detect --force
    - name: conan install vendored dependencies
      run: conan install . --output-folder=build/ --build=missing -s compiler.cppstd=11
    - name: cmake init 
      run: cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
      working-directory: ./build
    - name: make & install
      run: sudo make DESTDIR=./dist install
      working-directory: ./build
    - name: get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: create archive
      run: tar -cvf - /usr/local/sbin/ircd /usr/local/sbin/servicesd /usr/local/lib/clandestine | xz -9 > ${{vars.PROJECT_VERSION}}-$BUILD_DATE.tar.XZ
      env:
        BUILD_DATE: ${{ steps.date.outputs.date }}
    - name: create GH release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{vars.PROJECT_VERSION}}-$BUILD_DATE
        tag_name: ${{vars.PROJECT_VERSION}}-$BUILD_DATE
      env:
        GITHUB_TOKEN: ${{ github.token }}
        BUILD_DATE: ${{ steps.date.outputs.date }}
    - name: upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
        BUILD_DATE: ${{ steps.date.outputs.date }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{vars.PROJECT_VERSION}}-$BUILD_DATE.tar.XZ
        asset_name: ${{vars.PROJECT_VERSION}}-$BUILD_DATE.tar.XZ
        asset_content_type: application/x-xz
